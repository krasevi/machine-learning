# define texts for the PDF
text_1 = "Grop project#62. Machine learning with Python."
text_2 = "Assignment overview"
text_3 = "Data classification with supervised learning based on a predefined data set uncluding a comparison of different algorithms. Case of 3 Datasets: Iris flowers, Ecoli and "
text_4 = "Assignment tasks:"
text_5 = "Project development discription"
text_6 = "Before starting, all necessary libraries such as SciPy, Sklearn and FPDF were installed. The next step was retrieving datasets. We chose several datasets from The UCI Machine Learning Repository: Iris flowers, Ecoli and , which have several charasteristics in common. For example, three of them are multivariate and are based on real attributes. Similar attributes makes these datasets applicable for conducting classification tasks. In order to have clean data, prepared for the research, we restructured it in accordance with the following order: first line is name vectors while first row is class vectors. All data used is numerical."
text_7 = "After loading the dataset and defining input and output paths, we moved to getting the initial feeling of the datasets. That means creation of several discriptive statistical graphs."
text_8 = "First is a boxplot, based on the minimum, first quartile, median, third quartile, and maximum of every algorithm. As it can be seen, "
text_9 = "The second and third explanatory graphs are scatter plot matrices, drawn with matplotlib and seaborn.  "
text_10 = "After some preparations such as random data splitting using the sklearn function train_test_split, spot checking of the algorithms and appending them into a list, we evaluated the different Supervised Learning Classification Methods in turn. The comparison of the results can be seen on the picture below:"
text_11 = "The final stage of our project was drawing a confusion matrix for all the different algorithms."
text_12 = "Results showed, that..."

# add texts and plots to the pdf

from fpdf import FPDF
pdf = FPDF(format='A4')
pdf.set_margins(20,20,10)
pdf.add_page()
pdf.set_font("Times", "B", size=14)
pdf.cell(0, 10, txt=text_1, align="C", ln=1)
pdf.set_font("Times","I", size=12)
pdf.cell(0, 7, txt=text_2, ln=2)
pdf.set_font("Times", size=12)
pdf.multi_cell(0, 7, txt=text_3)
pdf.set_font("Times","I", size=12)
pdf.cell(0, 7, txt=text_4)
pdf.set_font("Times", size=12)
pdf.set_xy(70.00, 57.00)
pdf.cell(0,0,'1) Prepare for coding by installing libraries and finding data',(pdf.get_x(), pdf.get_y()))
pdf.set_xy(70.00, 64.00)
pdf.cell(0,0,'2) Test algorithms, visualise results and define the best algorithm',(pdf.get_x(), pdf.get_y()))
pdf.set_xy(70.00, 71.00)
pdf.cell(0,0,'3) Test algorithms, visualise results and define the best algorithm',(pdf.get_x(), pdf.get_y()), ln=1)
pdf.set_xy(70.00, 78.00)
pdf.cell(0,0,'4) Sum up the results and make suggestions for further work',(pdf.get_x(), pdf.get_y()), ln=1)
pdf.set_font("Times","I", size=12)
pdf.cell(0, 10, txt=text_5, ln=1)
pdf.set_font("Times", size=12)
pdf.multi_cell(0, 7, txt=text_6)
pdf.multi_cell(0, 7, txt=text_7)

pdf.set_font("Times", size=12)
pdf.multi_cell(0, 7, txt=text_8)
#pdf.rect(60, 170, 100, 60)
pdf.image("output/boxplot.png", 60, 170, 100, 60)

pdf.add_page()
pdf.set_margins(20,20,10)
pdf.set_font("Times", size=12)
pdf.multi_cell(0, 7, txt=text_9)
#pdf.rect(20, 30, 80, 60)
pdf.image("output/scatterplot.png", 20, 30, 80, 60)
#pdf.rect(110, 30, 80, 60)
pdf.image("output/scatterplot1.png", 110, 30, 80, 60)
pdf.set_xy(20.00, 100.00)
pdf.multi_cell(0,7,text_10,(pdf.get_x(), pdf.get_y()))
pdf.image("output/scatterplot.png", 20, 30, 80, 60)
#pdf.rect(60, 125, 100, 60)
pdf.image("output/comparison.png", 60, 130, 100, 60)

pdf.set_xy(20.00, 190.00)
pdf.multi_cell(0,7,text_11,(pdf.get_x(), pdf.get_y()))
#pdf.rect(60, 200, 100, 60)
pdf.image("output/confusion_matrix.png", 60, 210, 100, 60)
pdf.set_xy(20.00, 265.00)
pdf.multi_cell(0,7,text_12,(pdf.get_x(), pdf.get_y()))

# save pdf to output folder
pdf.output(output_path)


